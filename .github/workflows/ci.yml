name: CI

on:
  push:
    branches:
      - main
      - feature/*
      - bugfix/*
    paths-ignore:
      - '*.md'
  pull_request:
    branches:
      - main
      - feature/*
      - bugfix/*
    paths-ignore:
      - '*.md'

jobs:
  build-and-deploy-documentation:
    strategy:
      matrix:
        java: ["17"]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} - JDK ${{ matrix.java }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache Gradle caches
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ matrix.java }}-${{ matrix.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ matrix.java }}-${{ matrix.os }}-gradle-caches-
      - name: Cache Gradle wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ matrix.java }}-${{ matrix.os }}-gradle-wrapper-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ matrix.java }}-${{ matrix.os }}-gradle-wrapper-
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}

      - name: Assemble
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble testFixturesClasses testClasses functionalTestClasses --scan

      - name: Run unit tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test --scan

      - name: Run functional tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: functionalTest --scan

      - name: Generate test code coverage report
        uses: gradle/gradle-build-action@v2
        with:
          arguments: koverXmlReport --scan

      - name: Publish test code coverage report
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: Aggregated test code coverage report
          files: build/reports/kover/xml/report.xml

      - name: Check binary API compatibility
        uses: gradle/gradle-build-action@v2
        with:
          arguments: apiCheck --scan

      - name: Build documentation
        uses: gradle/gradle-build-action@v2
        with:
          arguments: dokkaHtml --scan

      - name: Publish documentation to GitHub Pages
        if: ${{ matrix.os == 'ubuntu-latest' && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build/dokka/html
          clean: true
          single-commit: true